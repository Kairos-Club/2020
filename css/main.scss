/*! HTML5 Boilerplate v6.1.0 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap; /* 1 */
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
    white-space: inherit;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print,
       (-webkit-min-device-pixel-ratio: 1.25),
       (min-resolution: 1.25dppx),
       (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

@font-face {
  font-family: 'slurpetteitalique';
  src:  url('../font/slurpette-italique.woff2') format('woff2'),
        url('../font/slurpette-italique.woff') format('woff');
  font-weight: normal;
  font-style: normal;

}

@font-face {
  font-family: 'slurpetteregular';
  src:  url('../font/slurpette-regular.woff2') format('woff2'),
        url('../font/slurpette-regular.woff') format('woff');
  font-weight: normal;
  font-style: normal;

}

html, body {

  font-family: 'slurpetteregular', Arial, Helvetica, sans-serif;
  font-weight: normal !important;

  width: 100%;
  min-width: 100%;

  height: 100%;
  min-height: 100%;

  padding: 0;
  margin: 0;

  cursor: default;

  background-color: blue;
  color: white;

  animation: morph 20s linear 3s infinite;
}

@keyframes morph {
  0% { background-color: #00F; }
  25% { background-color: #F00; }
  50% { background-color: #0F0; }
  100% { background-color: #00F; }
}

.content {
  position: fixed;
  z-index: 5;
  margin: 20px;
}

h1 {
  font-family: 'slurpetteregular', Arial, Helvetica, sans-serif;
  font-weight: normal !important;
  font-size: 30px;
  line-height: 30px;
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

code {
  background-color: white;
  border-radius: 4px;
  padding: 3px 6px;
  font-family: sans-serif;
  font-size: small;
}

.info {
  padding: 6px;
  //display: inline-block;
  margin-top: 0;

  background-color: rgba(255, 163, 36, 0.2);
  border: 2px solid rgba(255, 163, 36, 0.4);
  border-radius: 5px;
}

.info-urgent {
  padding: 6px;
  display: inline-block;
  margin-top: 0;

  background-color: rgba(255, 0, 0, 0.1);
  border: 2px solid rgba(255, 0, 0, 0.2);
  border-radius: 5px;
}

.flex-container {

  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: left;
  align-items: stretch;

  padding:5px; /* this */
  margin: -10px;

  > .flex-item {
    //flex:1 1 auto;
    margin:5px;  /* and that, will result in a 10px gap */
  }

  .flex-item {
    width: 100%;
    max-width: 400px;

    padding: 0;
    border: 2px solid #EEEEEE;

    border-radius: 5px;
    overflow: hidden;
    color: inherit;

    //box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);

    .cp_embed_wrapper {
      //margin: -1px;
    }
  }
}











#parallax-container {
  //background-color: #CCC;
  position: relative;
  z-index: 3;
  top: 0;
  left: 0;
  //overflow: hidden;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
}

.parallax-wrapper {
  position: absolute;
  /*background: white;*/
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  transform-origin: 50% 50%;
  transform: translate3d(0px, 0px, 0px);
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

.parallax-layer {
  transform-style: preserve-3d;
  backface-visibility: hidden;
  position: absolute;
  display: block;
  //transition: transform 1s ease-out;

  //filter: blur(1px) contrast(2);

  transition: filter .3s ease-in-out, transform 1s ease-out;

  &:hover {
    //filter: blur(0px) contrast(2);

    transition: none;

    img {
      //transform: scale(2)
    }
  }


  img {
    transition: transform .3s ease-in-out;
    width: 80%;
    max-width: 150px;
    transform: scale(1)
  }
}

.figure1,
.figure2,
.figure3,
.figure4 {
  width: 50vw;
  height: 50vh;
  line-height: 50vh;
  text-align: center;
}

.figure1 {
  top: 0;
  left: 0;
  //outline: 1px solid red;
}

.figure2 {
  top: 0;
  left: 50vw;
  //outline: 1px solid blue;
}

.figure3 {
  bottom: 0;
  left: 0;
  //outline: 1px solid green;
}
.figure4 {
  bottom: 0;
  left: 50vw;
  //outline: 1px solid gold;
}

.parallax-layer.is-out {
  transform: translate3d(0, 0, 0) !important;
  transition: transform 2s ease-out;
}





.sub-content {

  position: absolute;
  width: 100%;

  //padding: 0 1em;
  color: black;
  background-color: red;

  p {
    padding-left: 1em;
    padding-right: 1em;
  }
}


* {
  //outline: 1px solid rgba(255, 0, 0, 0.2);
}


.main {

  position: fixed;
  top: 1%;
  left: 1%;

  width: 98%;
  height: 98%;

  z-index: 9;

  //outline: 4px solid red;
}

.d-2020  {
  position: fixed;

  top: 10%;
  left: 10%;

  width: 80%;

  height: 80%;
  max-height: 600px;

  background: url('/img/2020.png') center center no-repeat;
  background-size: contain;
  background-blend-mode: difference;

  z-index: 1;
}

.avatar,
.icon {

  cursor: grab;

  min-width: 60px;
  min-height: 60px;

  //outline: 2px solid blue;
  //animation:rball 3s infinite ease-in-out;
  position: fixed;
  top: -100%;
  left: -100%;
  text-align: center;

  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.3));

  opacity: 0;

  img {
    width: 60px;
    height: 60px;
  }

  a {
    cursor: pointer;
  }

  p {
    margin: 4px 0 0 0;
    font-weight: bold;

    font-size: 1em;
    line-height: 1em;
  }
}

.avatar {
  img {
    //width: 60px;
  }
}

.up {
  animation:up .4s ease-in-out;
  animation-delay: 2s;
  animation-fill-mode: forwards;
}


@-webkit-keyframes up{
  0%{
    opacity: 0;
  }
  100%{
    opacity: 1;
  }
}

